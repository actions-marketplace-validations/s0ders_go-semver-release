name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  KO_DOCKER_REPO: docker.io/soders
  SEMVER_GIT_REPO_URL: https://github.com/s0ders/go-semver-release.git
  GIT_CI_USERNAME: go-semver-ci
  GIT_CI_EMAIL: go-semver@release.ci

jobs:

  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: false
          GITLEAKS_ENABLE_SUMMARY: false

  go-build:
    runs-on: ubuntu-latest
    needs: gitleaks
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Go Build
      run: go build -v ./...

    - name: Go Test
      run: go test -v ./...

  pre-release-detection:
    runs-on: ubuntu-latest
    needs: go-build
    outputs:
      release: ${{ steps.gosemver.outputs.NEW_RELEASE }}
      semver: ${{ steps.gosemver.outputs.SEMVER }}
    steps:
    - uses: actions/checkout@v3

    - name: Go Semver Release Dryrun
      id: gosemver
      uses: ./
      with:
        repository-url: ${{ env.SEMVER_GIT_REPO_URL }}
        token: ${{ secrets.GIT_TOKEN }}
        tag-prefix: 'v'
        dry-run: 'true'

  docker-build-and-scan:
    runs-on: ubuntu-latest
    needs: pre-release-detection
    if: ${{needs.pre-release-detection.outputs.release == 'true'}}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Build Prerelease
      uses: docker/build-push-action@v4
      with:
        context: .
        file: build/Dockerfile
        push: true
        tags: soders/go-semver-release:${{needs.pre-release-detection.outputs.semver}}-${{ github.sha }}

    - name: Trivy Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.KO_DOCKER_REPO }}/go-semver-release:${{needs.pre-release-detection.outputs.semver}}-${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH,MEDIUM'

  sign-and-release-tag:
    runs-on: ubuntu-latest
    needs: 
      - docker-build-and-scan
      - pre-release-detection
    if: ${{needs.pre-release-detection.outputs.release == 'true'}}
    steps:
    - uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - uses: imjasonh/setup-crane@v0.1
    
    - name: Crane Add Release Tag
      run: |
        crane tag ${{ env.KO_DOCKER_REPO }}/go-semver-release:${{needs.pre-release-detection.outputs.semver}}-${{ github.sha }} ${{needs.pre-release-detection.outputs.semver}}
    
    - name: Crane Add Latest Tag
      run: |
        crane tag ${{ env.KO_DOCKER_REPO }}/go-semver-release:${{needs.pre-release-detection.outputs.semver}}-${{ github.sha }} latest

    - name: Crane Delete Prerelease Tag
      run: crane delete ${{ env.KO_DOCKER_REPO }}/go-semver-release:${{needs.pre-release-detection.outputs.semver}}-${{ github.sha }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@main

    - name: Sign Artifacts
      run: |
        cosign sign --key env://COSIGN_PRIVATE_KEY -a repository=${{ github.repository }} -a commit=${{ github.sha }} -a actor=${{ github.triggering_actor }} ${{ env.KO_DOCKER_REPO }}/go-semver-release:${{needs.pre-release-detection.outputs.semver}}
      env:
        COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
        COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
        
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        git_user_signingkey: true
        git_commit_gpgsign: true
        git_tag_gpgsign: true

    - name: Git Configuration
      run: git config --global user.email "${{ env.GIT_CI_EMAIL }}" && git config --global user.name "${{ env.GIT_CI_USERNAME }} && git config --global commit.gpgsign true"

    - name: Push Semver Tag
      run: git tag -a ${{needs.pre-release-detection.outputs.semver}} -m "${{needs.pre-release-detection.outputs.semver}}" && git push origin ${{needs.pre-release-detection.outputs.semver}}

    - name: Update Docker Image Version In Documentation
      run: sed -E -e 's/soders\/go-semver-release:v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/soders\/go-semver-release:${{needs.pre-release-detection.outputs.semver}}/' README.md > README.md

    - name: Update Go Module Version In Documentation
      run: sed -E -e 's/s0ders\/go-semver-release@v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/s0ders\/go-semver-release@${{needs.pre-release-detection.outputs.semver}}/' README.md > README.md

    - name: Push Docs Update
      run: git commit -A -m "[ci] updated version in documentation" && git push origin
